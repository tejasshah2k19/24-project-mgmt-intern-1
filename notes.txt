create project -> 

	file -> new -> spring starter project -> 
				name    : projectTitle 
				type    : maven 
				group   : projectTitle	
				artifact: projectTitle
				description : projectTitle 
				package : com 
				 
				 
 	in dependencies -> select -> spring web , spring boot devtools 
 
 
 we will use project explorer 
 	if project explorer is not visible on left pane then->	
 			how to open project explorer? 
 				click on window menu -> show view -> other -> type 
 							project -> select project explorer 	
------------------------------------------------------------------------ 	
help -> eclipse marketplace -> popular 
				-> eclipse enterprise java and web developer tools 
						-> install 
----------------------------------------------------------------------							
 spring boot-> 
 		src -> main -> resources -> application.properties
 		
 		server port -> 8080 
 		
 		
 		jsp -> 1) lib => tomcat embeded jasper 
 			   2) configuration => application.properties 
 			   		create folder inside main folder ->
 			   						webapp/WEB-INF/views
 			    	now put below 2 lines in application.properties->
 			    	spring.mvc.view.prefix=WEB-INF/views/
					spring.mvc.view.suffix=.jsp
-------------------------------------------------------------------------			    	

create folder arth inside com folder 

create folder controller inside arth 

create SessionController in controller folder 

	how to create controller ? 
		create class inside controller folder 
		add @Controller annotation on the class 
		
how to create a method that open jsp 
	inside controller create a method , 
	we want to open Welcome.jsp 
			1) create Welcome.jsp inside views folder
			2) create method in controller with Annotation
			 
					@Getmapping("/welcome")
					public String welcome() {
						return "Welcome";
					}

how to run ?
		right click on project ->run as -> spring boot app -> 	
				once server started message display on console 
				open web browser and type http://localhost:9999/welcome 
				
				
---------------------------------------------------------------
file -> new -> spring starter => 
						1) spring web 
						2) devtools 
						3) tomcat embeded jasper 
						
						application.properties 
						server.port=9999
						
jsp -> views 


controller -> com->arth->controller->
					class -> @Controller 
					 
					 	@GetMapping("login")   // url 
						public String login(){
							return "Login";   // jsp 
						} 

------------------------------------------------------------------

how to create getters and setters? 

class -> inside the class -> right click -> source -> getters and setters->
			select all -> finish 
			
-------------------------------------------------------------------
users 

role 
	roleName
	 
	
admin , pm , developer , tester  

---------------------------------------------------------------
computer -> database -> MySQL 

--------------------------------------------------------------
how to get db and hibernate jar in project ! 

project -> right click -> spring -> add starters ->	
			1) mysql driver
			2) spring data jpa 
			
			finish 
			
			
configuration -> application.properties 
				1) database
						url , userName , password  
				2) hibernate 			
						4 
						dialect 
						ddl-auto 
						show-sql 
						format_sql
						
---------------------------------------------------------------------

hibernate -> framework -> database -> 


class -> Role -> roleId,  roleName -> hibernate => create table

object -> roleId=1
		  roleNAme=ADMIN   -> obj.save()  => insert into
		   
		  

ORM -> Object Relational Mapping  		     


create table? 

---------------------------------------------------------------------------
hibernate -> class { entity } -> table 
---------------------------------------------------------------------------


bean vs entity 

entity -> class -> table 
bean -> class -> no table 

data -> database : table -> entity 
data -> temp -> bean 


user input ->signup -> UserEntity 
user input ->login ->  LoginBean/UserBean 


------------------------------------------------------------------------ 
url error !!! 

project -> right click -> properties -> java build path 
		-> source -> resource -> excluded -> remove -> apply and close 
------------------------------------------------------------------------


git 
	git init 
	git remote add 
	git add 
	git commit -m ""
	git push 
	
every day ->
	git commit 
	git push 
	

	1) login into github 
	2) create repo 
	

 
-----------------------------------------
how to create entity ? 

inside entity folder create 1 java class ->  
		here i will create UserEntity 
		
		my class name will UserEntity 
		
		give @Entity annotation to your class - class level annotation 
		{using above annotation we inform jpa create table } 
		
		give @Table annotation to your class - class level annotation 
		{this will helps to give table name } 
		

	@Entity 
	@Table(name="users") 
	class UserEntity{
	
	}
	
	add variable inside the class - which are as same as your table field 
	{inside users table i want to take 10 columns so i will take 10 variables inside class } 
	also mark your variable private 
	
	@Entity 
	@Table(name="users") 
	class UserEntity{
			private Integer userId;
	private String firstName;
	private String lastName;
	private String email;
	private String password;
	private String gender;
	private String contactNum;
	private String dateOfBirth;
	private String address;
	private String city;
	private String state;
	private Integer otp;
	private Integer roleId;
	}
	
	
	
	create getters and setters 
			right click inside the class -> 
					source -> generate getters and setters ->
							select all -> Generate 
							
	
	we must have to create primary key 
	to create primary key we use @Id annotation on the userId variable 
	
	primary key field should be auto inserted / auto incremented 
	@GeneratedValue(strategy = GenerationType.IDENTITY)

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer userId;
	
	
	so finally your class looks like 
	
	
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
@Entity
@Table(name="users")
public class UserEntity {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer userId;
	private String firstName;
	private String lastName;
	private String email;
	private String password;
	private String gender;
	private String contactNum;
	private String dateOfBirth;
	private String address;
	private String city;
	private String state;
	private Integer otp;
	private Integer roleId;
	public Integer getUserId() {
		return userId;
	}
	public void setUserId(Integer userId) {
		this.userId = userId;
	}
	public String getFirstName() {
		return firstName;
	}
	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}
	public String getLastName() {
		return lastName;
	}
	public void setLastName(String lastName) {
		this.lastName = lastName;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	public String getGender() {
		return gender;
	}
	public void setGender(String gender) {
		this.gender = gender;
	}
	public String getContactNum() {
		return contactNum;
	}
	public void setContactNum(String contactNum) {
		this.contactNum = contactNum;
	}
	public String getDateOfBirth() {
		return dateOfBirth;
	}
	public void setDateOfBirth(String dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}
	public String getAddress() {
		return address;
	}
	public void setAddress(String address) {
		this.address = address;
	}
	public String getCity() {
		return city;
	}
	public void setCity(String city) {
		this.city = city;
	}
	public String getState() {
		return state;
	}
	public void setState(String state) {
		this.state = state;
	}
	public Integer getOtp() {
		return otp;
	}
	public void setOtp(Integer otp) {
		this.otp = otp;
	}
	public Integer getRoleId() {
		return roleId;
	}
	public void setRoleId(Integer roleId) {
		this.roleId = roleId;
	}
	
}
	
----------------------------------------------------------------------------------


db role add 

1) RoleEntity 

2) RoleController ->
	class -> @Controller 
	
	2.1) jsp open -> roleName textbox 
			@GetMapping 




----------------------------------------------------------------------------------

ProjectStatus -> db add 

 







						 
























